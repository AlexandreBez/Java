package main;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

import Entity.Download;

public class DownloadManager {
	
    private List<Download> downloads = new ArrayList<>();
    private ExecutorService executorService;
    private Boolean isFinished = false;
    
    public DownloadManager(int maxConcurrentDownloads) {
        executorService = Executors.newFixedThreadPool(maxConcurrentDownloads);
    }
    
    public void adicionarDownload(Download download) {
        downloads.add(download);
    }
    
    public void iniciarDownloads() {
        for (Download download : downloads) {
            executorService.submit(() -> {
                try {
                    int progress = 0;
                    while (progress < 100) {
                        Thread.sleep(1000); // Sleep for 1 second
                        progress++; // Increment progress by 1%
                        System.out.println("Download: " + download.getName() + " Progress: " + progress + "%");
                    }
                    System.out.println("Download concluído: " + download.getName());
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            });
        }
    }


    public void esperarDownloadsConcluirem() {
        executorService.shutdown();
        try {
            executorService.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
    
    public static void main(String[] args) {
    	// Número máximo de downloads simultâneos
    	
        DownloadManager manager = new DownloadManager(3); 
        manager.adicionarDownload(new Download(1, "image.gif", "0%"));
        manager.adicionarDownload(new Download(2, "myMusic.mp3", "0%"));
        manager.adicionarDownload(new Download(3, "programa.exe", "0%"));
        manager.adicionarDownload(new Download(4, "programa2.exe", "0%"));
        manager.adicionarDownload(new Download(5, "programa3.exe", "0%"));

        manager.iniciarDownloads();
        manager.esperarDownloadsConcluirem();
        System.out.println("Todos os downloads foram concluídos.");
    }

}

